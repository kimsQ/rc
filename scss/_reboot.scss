//
// Base styles
// --------------------------------------------------

// Use box sizing on all the things!
* {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  // Sets a specific default `font-size` for user with `rem` type scales.
  font-size: $font-size-root;
  // As a side-effect of setting the @viewport above,
  // IE11 & Edge make the scrollbar overlap the content and automatically hide itself when not in use.
  // Unfortunately, the auto-showing of the scrollbar is sometimes too sensitive,
  // thus making it hard to click on stuff near the right edge of the page.
  // So we add this style to force IE11 & Edge to use a "normal", non-overlapping, non-auto-hiding scrollbar.
  // See https://github.com/twbs/bootstrap/issues/18543
  -ms-overflow-style: scrollbar;
  // Changes the default tap highlight to be completely transparent in iOS.
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

// We fix position the body and scroll `.content`.
body {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $body-color;
  background-color: $body-bg;
}

// Universal link styling
a {
  color: $link-color;
  text-decoration: none;
  -webkit-tap-highlight-color: rgba(0,0,0,0); // Removes the dark touch outlines on links in webkit browsers.

  &:active {
    color: darken($link-color, 10%);
  }
}

// Wrapper to be used around all content not in .bar-title and .bar-tab
.content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  background-color: $body-bg;
  -webkit-overflow-scrolling: touch;
}

// Hack to force all relatively and absolutely positioned elements still render while scrolling
// Note: This is a bug for "-webkit-overflow-scrolling: touch"
.content > * {
  @include transform(translateZ(0));
}

// Pad top/bottom of content so it doesn't hide behind bars.
// Note: For these to work, content must come after both bars in the markup
.bar-nav ~ .content {
  padding-top: $bar-base-height;
}
.bar-header-secondary ~ .content {
  padding-top: ($bar-base-height*2);
}

// Footer bar padding
.bar-footer ~ .content {
  padding-bottom: $bar-base-height;
}
.bar-footer-secondary ~ .content {
  padding-bottom: ($bar-base-height*2);
}

// Tab bar padding
.bar-tab ~ .content {
  padding-bottom: $bar-tab-height;
}
.bar-footer-secondary-tab ~ .content {
  padding-bottom: ($bar-tab-height+$bar-base-height);
}
